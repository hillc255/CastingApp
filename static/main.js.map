{"version":3,"sources":["./src/app/components/actors-list/actors-list.component.ts","./src/app/components/actors-list/actors-list.component.html","./src/app/components/movie-details/movie-details.component.ts","./src/app/components/movie-details/movie-details.component.html","./src/environments/environment.ts","./src/app/token.interceptor.ts","./src/app/components/profile/profile.component.ts","./src/app/components/add-actor/add-actor.component.ts","./src/app/components/add-actor/add-actor.component.html","./src/app/services/movie.service.ts","./src/app/services/actor.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/movies-list/movies-list.component.ts","./src/app/components/movies-list/movies-list.component.html","./src/app/app.module.ts","./src/app/components/actor-details/actor-details.component.ts","./src/app/components/actor-details/actor-details.component.html","./src/app/services/auth.service.ts","./src/app/components/add-movie/add-movie.component.ts","./src/app/components/add-movie/add-movie.component.html","./src/app/components/auth/auth.component.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Actor } from 'src/app/models/actor.model';\nimport { ActorService } from 'src/app/services/actor.service';\nimport { AuthService } from '@auth0/auth0-angular';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-actors-list',\n  templateUrl: './actors-list.component.html',\n  styleUrls: ['./actors-list.component.css']\n})\nexport class ActorsListComponent implements OnInit {\n  actors?: Actor[];\n  currentActor?: Actor;\n  currentIndex = -1;\n  first_name = '';\n  isAssistant: boolean = false; //added as a property of component\n  isDirector: boolean = false; //added as a property of component\n\n  constructor(\n    private actorService: ActorService,\n    public auth0: AuthService) { }\n\n  async ngOnInit() {\n    this.retrieveActors();\n    this.checkRoles() ; //function whenever page loads\n  }\n\n  retrieveActors(): void {\n    this.actorService.getAllActors()\n      .subscribe(\n        data => {\n          this.actors = data;\n          console.log(data);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  setDefaultPic() {\n    this.currentActor.actor_img = \"https://i.ibb.co/6v84Gpq/no-image.png\";\n  }\n\n  refreshList(): void {\n    this.retrieveActors();\n    this.currentActor = undefined;\n    this.currentIndex = -1;\n  }\n\n  setActiveActor(actor: Actor, index: number): void {\n    this.currentActor = actor;\n    this.currentIndex = index;\n  }\n\n  searchFirstName(): void {\n    this.actorService.findActorByFirstName(this.first_name)\n      .subscribe(\n        data => {\n          this.actors = data;\n          console.log(data);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  formatReleaseDate(): void {\n    var parsedData;\n    let dateString = this.currentActor.birth_date;\n    parsedData = new Date(dateString);\n  }\n\n  //method called after component loads to check the roles\n  checkRoles() {\n    console.log('checkRoles()');\n    this.auth0.isAuthenticated$  //observable which returns the authenticated status\n      .subscribe(\n        isAuthenticated=>{\n          if(isAuthenticated) {  //if authenticated then gets the user\n            console.log('checkRoles(): authenticated getting user');\n            this.auth0.user$  //observable which returns the user\n              .subscribe(\n                user=>{  // returns the user\n                  console.log('checkRoles(): user', user);\n                  const roles: Array<string> = user[ environment.userRole ]; //fetch roles from user\n                  console.log(\"checkRoles(): user roles: \", roles);\n                  this.isAssistant = roles.some(elem => elem==\"assistant\")\n                  this.isDirector = roles.some(elem => elem==\"director\")\n                },\n                err=>{\n                  console.log('checkRoles(): error getting user', err);\n                }\n              );\n          } else {\n            console.log('checkRoles(): not authenticated ');\n          }\n        },\n        err=>{\n          console.log('checkRoles(): error getting authentication status', err);\n        }\n      );\n  }\n\n}\n","<div class=\"list row\">\n    <div class=\"col-md-8\">\n      <div class=\"input-group mb-3\">\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          placeholder=\"Search by first name\"\n          [(ngModel)]=\"first_name\"\n        />\n        <div class=\"input-group-append\">\n          <button\n            class=\"btn btn-outline-secondary\"\n            type=\"button\"\n            (click)=\"searchFirstName()\"\n          >\n            Search\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col-md-6\">\n      <p></p>\n      <h4>Robot List</h4>\n\n      <ul class=\"list-group\">\n        <li\n          class=\"list-group-item\"\n          *ngFor=\"let actor of actors; let i = index\"\n          [class.active]=\"i == currentIndex\"\n          (click)=\"setActiveActor(actor, i)\"\n        >\n          {{ actor.first_name }}\n        </li>\n      </ul>\n    </div>\n\n    <div class=\"col-md-6\">\n      <div *ngIf=\"currentActor\">\n        <p></p>\n        <h4>Robot</h4>\n\n        <div>\n          <img class=\"image-thumb\" src=\"{{ currentActor.actor_img }}\" \n          (error)=\"setDefaultPic()\" />\n        </div>\n        <br />\n        <div>\n          <label><strong>First Name:    </strong>\n          {{ currentActor.first_name }} </label>\n        </div>\n\n         <div>\n          <label><strong>Last Name:    </strong>\n          {{ currentActor.last_name }} </label>\n        </div>\n\n        <div>\n          <label><strong>Birth Date:    </strong>\n          {{ currentActor.birth_date }} </label>\n        </div>\n        \n        <div>\n          <label><strong>Gender:    </strong>\n          {{ currentActor.gender }} </label>\n        </div>\n\n        <div>\n          <label><strong>Status:    </strong>\n          {{ currentActor.actor_publish ? \"Published\" : \"Pending\" }}\n        </label>\n        </div>\n        <p></p>\n        <a class=\"btn btn-primary me-2\" *ngIf=\"isDirector || isAssistant\" routerLink=\"/actors/{{ currentActor.id }}\">\n          Edit\n        </a>\n      </div>\n  \n      <div *ngIf=\"!currentActor\">\n        <br />\n        <p>Please click on a Robot...</p>\n      </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MovieService } from 'src/app/services/movie.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Movie } from 'src/app/models/movie.model';\nimport { AuthService } from '@auth0/auth0-angular';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-movie-details',\n  templateUrl: './movie-details.component.html',\n  styleUrls: ['./movie-details.component.css']\n})\nexport class MovieDetailsComponent implements OnInit {\n  currentMovie: Movie = {\n    title: '',\n    release_date: '',\n    movie_img: '',\n    movie_publish: false\n  };\n  message = '';\n  isAssistant: boolean = false; //added as a property of component\n  isDirector: boolean = false; //added as a property of component\n\n  constructor(\n    private movieService: MovieService,\n    private route: ActivatedRoute,\n    private router: Router, \n    public auth0: AuthService) { }\n\n  async ngOnInit() {\n    this.message = '';\n    this.getMovie(this.route.snapshot.params.id);\n    this.checkRoles() ; //function whenever page loads\n  }\n\n  getMovie(id: string): void {\n    this.movieService.getMovie(id)\n      .subscribe(\n        data => {\n          if(data && data.success === true) {\n            this.currentMovie = data.movie;\n            console.log(`getMovie(${id}): returned movie`, this.currentMovie);\n          } else {\n            console.error(`getMovie(${id}) failed`, data);\n          }\n        },\n        error => {\n          console.error(`getMovie(${id})`, error);\n        });\n  }\n\n  publishMovie(): void {\n    this.movieService.publishMovie(this.currentMovie.id)\n      .subscribe(\n        response => {\n          this.getMovie(this.route.snapshot.params.id);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  unpublishMovie(): void {\n    this.movieService.unpublishMovie(this.currentMovie.id)\n      .subscribe(\n        response => {\n          this.getMovie(this.route.snapshot.params.id);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  updateMovie(): void {\n    this.movieService.updateMovie(this.currentMovie.id, this.currentMovie)\n      .subscribe(\n        response => {\n          console.log(response);\n          this.message = (response.success)?\"Successful Movie update!\":\"Unsuccessful Movie update.\";\n        },\n        error => {\n          console.log(error);\n          this.message = \"Unsuccessful Movie update\";\n        });\n  }\n  \n  deleteMovie() {\n    this.movieService.deleteMovie(this.currentMovie.id)\n      .subscribe(\n        response => {\n          console.log(response);\n          this.router.navigate(['/movies']);\n        },\n        err => {\n          console.log(err);\n        }\n      );\n  }\n\n  \n  //method called after component loads to check the roles\n  checkRoles() {\n    console.log('checkRoles()');\n    this.auth0.isAuthenticated$  //observable which returns the authenticated status\n      .subscribe(\n        isAuthenticated=>{\n          if(isAuthenticated) {  //if authenticated then gets the user\n            console.log('checkRoles(): authenticated getting user');\n            this.auth0.user$  //observable which returns the user\n              .subscribe(\n                user=>{  // returns the user\n                  console.log('checkRoles(): user', user);\n                  const roles: Array<string> = user[ environment.userRole ]; //fetch roles from user\n                  // const roles: Array<string> = user[\"https://cast-app.herokuapp.com/roles\"]; //fetch roles from user\n                  console.log(\"checkRoles(): user roles: \", roles);\n                  this.isAssistant = roles.some(elem => elem==\"assistant\")\n                  this.isDirector = roles.some(elem => elem==\"director\")\n                },\n                err=>{\n                  console.log('checkRoles(): error getting user', err);\n                }\n              );\n          } else {\n            console.log('checkRoles(): not authenticated ');\n          }\n        },\n        err=>{\n          console.log('checkRoles(): error getting authentication status', err);\n        }\n      );\n  }\n}\n","<form #form=\"ngForm\" novalidate>\n  <div class=\"submit-form\">\n    <div *ngIf=\"currentMovie.id\" class=\"edit-form\">\n      <h4>Movie</h4> <p>{{ message }}</p>\n\n      <form>\n        <div class=\"form-group\">\n          <label for=\"id\">Id</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            [readonly]=\"!editable\"\n            id=\"id\"\n            [(ngModel)]=\"currentMovie.id\"\n            name=\"id\"\n          />\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"title\">Title</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            #title=\"ngModel\"\n            required\n            minlength=\"2\"\n            id=\"title\"\n            [(ngModel)]=\"currentMovie.title\"\n            name=\"title\"\n          />\n        </div>\n\n        <div *ngIf=\"title.invalid && (title.dirty || title.touched)\"\n          class=\"alert alert-danger\">\n          <div *ngIf=\"title.errors.required\">\n            Title is required.\n          </div>\n          <div *ngIf=\"title.errors.minlength\">\n            Title must be at least 2 characters.\n          </div>\n        </div>\n\n        <div class=\"form-group\">\n            <label for=\"release_date\">Release Date</label>\n            <input\n              type=\"text\"\n              onfocus=\"(this.type='date')\"\n              class=\"form-control\"\n              name=\"release_date\"\n              #release_date=\"ngModel\"\n              required\n              id=\"release_date\"\n              [(ngModel)]=\"currentMovie.release_date\"\n            />\n        </div>\n\n        <div class=\"form-group\">\n            <label for=\"movie_img\">Movie Image</label>\n            <input\n              id=\"movie_img\"\n              type=\"text\"\n              class=\"form-control\"\n              name=\"movie_img\"\n              #movie_img=\"ngModel\"\n              required\n              [(ngModel)]=\"currentMovie.movie_img\"\n              [ngModelOptions]=\"{ updateOn: 'blur' }\" \n              pattern=\"(http(s?):)([/|.|\\w|\\s|-])*\\.(?:jpg|jpeg|gif|png|svg)\"\n            />\n        </div>\n \n        <div *ngIf=\"movie_img.invalid && (movie_img.dirty || movie_img.touched)\"\n          class=\"alert alert-danger\">\n          <div *ngIf=\"movie_img.errors.required\">\n            URL is required.\n          </div>\n          <div *ngIf=\"movie_img.errors.pattern\">\n            Please enter valid url.\n          </div>\n        </div>\n  \n        <div class=\"form-group\">\n          <label><strong>Status:</strong></label>\n          {{ currentMovie.movie_publish ? \"Published\" : \"Pending\" }}\n        </div>\n      </form>\n  \n      <br />\n      <button\n        class=\"btn btn-primary me-2\"\n        *ngIf=\"currentMovie.movie_publish && isAssistant\"\n        (click)=\"unpublishMovie()\"\n      >\n        UnPublish\n      </button>\n      \n      <button\n        class=\"btn btn-primary me-2\"\n        *ngIf=\"!currentMovie.movie_publish && isAssistant\"\n        (click)=\"publishMovie()\"\n      >\n        Publish\n      </button>\n  \n      <button class=\"btn btn-danger me-2\" *ngIf=\"isDirector\" (click)=\"deleteMovie()\">\n        Delete\n      </button>\n  \n      <button\n        class=\"btn btn-success me-2\" *ngIf=\"isAssistant\" [disabled]=\"form.invalid\" (click)=\"updateMovie()\" >\n        Update\n      </button>\n    </div>\n  \n    <div *ngIf=\"!currentMovie.id\">\n      <br />\n      <p>Cannot access this Movie...</p>\n    </div>\n  </div>\n</form>\n","export const environment = {\n  production: false,\n  title: 'Local Environment Heading',\n  userRole: 'https://cast-app.herokuapp.com/roles',\n  baseUrl: 'https://cast-app.herokuapp.com/api/movies',\n  baseUrl2: 'https://cast-app.herokuapp.com/api/actors',\n  auth: {\n    clientID: 'f7ZLU2DmWeRcLuikyEKjqk0893KA2Mbj',\n    domain: 'autumn-voice-0666.us.auth0.com',\n    audience: 'https://cast-app.herokuapp.com/api',\n    redirect: 'http://localhost:8081',\n    scope: 'openid profile email',\n    uri: 'https://cast-app.herokuapp.com/*'\n  }\n};\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './services/auth.service';\r\n\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private authService: AuthService\r\n  ) { }\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const modifiedReq = request.clone({ \r\n      headers: request.headers.set('Authorization', `Bearer ${this.authService.accessToken}`),\r\n    });\r\n    return next.handle(modifiedReq);\r\n  }\r\n}","import { Component } from '@angular/core';\r\nimport { AuthService } from '@auth0/auth0-angular';\r\n\r\n@Component({\r\n  selector: 'app-user-profile',\r\n  template: `\r\n    <ul *ngIf=\"auth.user$ | async as user\">\r\n    <p></p>\r\n      {{ user.email }}\r\n    </ul>`\r\n})\r\nexport class UserProfileComponent {\r\n  constructor(public auth: AuthService) {}\r\n}","import { Component, OnInit } from '@angular/core';\nimport { Actor } from 'src/app/models/actor.model';\nimport { ActorService } from 'src/app/services/actor.service';\nimport { AuthService } from '@auth0/auth0-angular';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-add-actor',\n  templateUrl: './add-actor.component.html',\n  styleUrls: ['./add-actor.component.css']\n})\nexport class AddActorComponent implements OnInit {\n  actor: Actor = {\n    first_name: '',\n    last_name: '',\n    birth_date: '',\n    gender: '',\n    actor_img: '',\n    actor_publish: false\n  };\n  submitted = false;\n  isDirector: boolean = false; //isDirector is a property of component\n\n  constructor(\n    private actorService: ActorService,\n    public auth0: AuthService) { }\n\n  async ngOnInit() {\n    this.checkRoles() ; //function whenever page loads\n  }\n\n  saveActor(form: any): void {\n    const data = {\n      first_name: this.actor.first_name,\n      last_name: this.actor.last_name,\n      birth_date: this.actor.birth_date,\n      gender: this.actor.gender,\n      actor_img: this.actor.actor_img,\n      actor_publish: this.actor.actor_publish\n    };\n\n    this.actorService.addActor(data)\n      .subscribe(\n        response => {\n          console.log(response);\n          this.submitted = true;\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  newActor(): void {\n    this.submitted = false;\n    this.actor = {\n      first_name: '',\n      last_name: '',\n      birth_date: '',\n      gender: '',\n      actor_img: '',\n      actor_publish: false\n    };\n  }\n\n  //method called after component loads to check the roles\n  checkRoles() {\n    console.log('checkRoles()');\n    this.auth0.isAuthenticated$  //observable which returns the authenticated status\n      .subscribe(\n        isAuthenticated=>{\n          if(isAuthenticated) {  //if authenticated then gets the user\n            console.log('checkRoles(): authenticated getting user');\n            this.auth0.user$  //observable which returns the user\n              .subscribe(\n                user=>{  // returns the user\n                  console.log('checkRoles(): user', user);\n                  const roles: Array<string> = user[ environment.userRole ]; //fetch roles from user\n                  console.log(\"checkRoles(): user roles: \", roles);\n                  this.isDirector = roles.some(elem => elem==\"director\")\n                },\n                err=>{\n                  console.log('checkRoles(): error getting user', err);\n                }\n              );\n          } else {\n            console.log('checkRoles(): not authenticated ');\n          }\n        },\n        err=>{\n          console.log('checkRoles(): error getting authentication status', err);\n        }\n      );\n  }\n\n}\n","<form #form=\"ngForm\" (ngSubmit)=\"saveActor(form)\" novalidate>\n    <div class=\"submit-form\">\n      <div *ngIf=\"!submitted\">\n        <br />\n        <h4>Add Robot</h4>\n        <p></p>\n\n        <div class=\"form-group\">\n          <label for=\"first_name\">First Name</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            #first_name=\"ngModel\"\n            required\n            minlength=\"2\"\n            [(ngModel)]=\"actor.first_name\"\n            name=\"actor\"\n          />\n        </div>\n             \n        <div *ngIf=\"first_name.invalid && (first_name.dirty || first_name.touched)\"\n          class=\"alert alert-danger\">\n          <div *ngIf=\"first_name.errors.required\">\n            First Name is required.\n          </div>\n          <div *ngIf=\"first_name.errors.minlength\">\n            First Name must be 2 characters long.\n          </div>\n        </div>\n  \n        <div class=\"form-group\">\n          <label for=\"last_name\">Last Name</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            #last_name=\"ngModel\"\n            required\n            minlength=\"2\"\n            [(ngModel)]=\"actor.last_name\"\n            name=\"last_name\"\n          />\n        </div>\n\n        <div *ngIf=\"last_name.invalid && (last_name.dirty || last_name.touched)\"\n        class=\"alert alert-danger\">\n        <div *ngIf=\"last_name.errors.required\">\n          Last Name is required.\n        </div>\n        <div *ngIf=\"last_name.errors.minlength\">\n          Last Name must be 2 characters long.\n        </div>\n      </div>\n\n        <div class=\"form-group\">\n            <label for=\"birth_date\">Birth Date</label>\n            <input\n              type=\"text\"\n              onfocus=\"(this.type='date')\"\n              class=\"form-control\"\n              name=\"birth_date\"\n              placeholder=\"mm/dd/yyyy\"\n              #birth_date=\"ngModel\"\n              id=\"birth_date\"\n              required\n              [(ngModel)]=\"actor.birth_date\"\n            />\n          </div>\n\n          <div class=\"form-group\">\n            <label for=\"gender\">Gender</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              #gender=\"ngModel\"\n              id=\"gender\"\n              required\n              minlength=\"2\"\n              [(ngModel)]=\"actor.gender\"\n              name=\"gender\"\n            />\n          </div>\n\n          <div *ngIf=\"gender.invalid && (gender.dirty || gender.touched)\"\n            class=\"alert alert-danger\">\n            <div *ngIf=\"gender.errors.required\">\n              Gender is required.\n            </div>\n            <div *ngIf=\"gender.errors.minlength\">\n              Gender must be 2 characters long.\n            </div>\n          </div>\n\n          <div class=\"form-group\">\n            <label for=\"actor_imgr\">Robot Image</label>\n            <input\n              id=\"actor_img\"\n              type=\"text\"\n              class=\"form-control\"\n              name=\"actor_img\"\n              placeholder=\"https://R2-D2.png\"\n              #actor_img=\"ngModel\"\n              required\n              [(ngModel)]=\"actor.actor_img\"\n              name=\"actor_img\"\n              [ngModelOptions]=\"{ updateOn: 'blur' }\" \n              pattern=\"(http(s?):)([/|.|\\w|\\s|-])*\\.(?:jpg|jpeg|gif|png|svg)\"\n            />\n          </div>\n\n          <div *ngIf=\"actor_img.invalid && (actor_img.dirty || actor_img.touched)\"\n            class=\"alert alert-danger\">\n            <div *ngIf=\"actor_img.errors.required\">\n              URL is required.\n            </div>\n            <div *ngIf=\"actor_img.errors.pattern\">\n              Please enter valid url.\n            </div>\n          </div>\n  \n          <p></p>\n          <button class=\"btn btn-success\" *ngIf=\"isDirector\" [disabled]=\"form.invalid\">Submit</button>\n        </div>\n  \n        <div *ngIf=\"submitted\">\n          <h4>Robot was submitted successfully!</h4>\n          <button class=\"btn btn-success\" (click)=\"newActor()\">Add</button>\n        </div>\n    </div>\n</form>\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Movie } from '../models/movie.model';\nimport { AuthService } from '@auth0/auth0-angular';\nimport { environment } from 'src/environments/environment';\n\nconst baseUrl = environment.baseUrl;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MovieService {\n\n  constructor(private http: HttpClient, private auth0: AuthService) { }\n\n  getAllMovies(): Observable<Movie[]> {\n    return this.http.get<Movie[]>(baseUrl);\n  }\n\n  getMovie(id: any): Observable<any> {\n    return this.http.get(`${baseUrl}/${id}`);\n  }\n\n  addMovie(data: any): Observable<any> {\n    return this.http.post(baseUrl, data);\n  }\n\n  updateMovie(id: any, data: any): Observable<any> {\n    return this.http.patch(`${baseUrl}/${id}`, data);\n  }\n\n  publishMovie(id: any): Observable<any> {\n    return this.http.patch(`${baseUrl}/${id}/publish`, {});\n  }\n\n  unpublishMovie(id: any): Observable<any> {\n    return this.http.patch(`${baseUrl}/${id}/unpublish`, {});\n  }\n\n  deleteMovie(id: any): Observable<any> {\n    return this.http.delete(`${baseUrl}/${id}`);\n  }\n\n  findMovieByTitle(title: any): Observable<Movie[]> {\n    return this.http.get<Movie[]>(`${baseUrl}/search?title=${title}`);\n  }\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Actor } from '../models/actor.model';\nimport { AuthService } from '@auth0/auth0-angular';\nimport { environment } from 'src/environments/environment';\n\nconst baseUrl = environment.baseUrl2;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActorService {\n\n  constructor(private http: HttpClient, private auth0: AuthService) { }\n\n  getAllActors(): Observable<Actor[]> {\n    return this.http.get<Actor[]>(baseUrl);\n  }\n\n  getActor(id: any): Observable<any> {\n    return this.http.get(`${baseUrl}/${id}`);\n  }\n\n  addActor(data: any): Observable<any> {\n    return this.http.post(baseUrl, data);\n  }\n\n  updateActor(id: any, data: any): Observable<any> {\n    return this.http.patch(`${baseUrl}/${id}`, data);\n  }\n\n  publishActor(id: any): Observable<any> {\n    return this.http.patch(`${baseUrl}/${id}/publish`, {});\n  }\n\n  unpublishActor(id: any): Observable<any> {\n    return this.http.patch(`${baseUrl}/${id}/unpublish`, {});\n  }\n\n  deleteActor(id: any): Observable<any> {\n    return this.http.delete(`${baseUrl}/${id}`);\n  }\n\n  findActorByFirstName(first_name: any): Observable<Actor[]> {\n    return this.http.get<Actor[]>(`${baseUrl}/search?first_name=${first_name}`);\n  }\n}","import { Component } from '@angular/core';\nimport { environment } from '../environments/environment';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  //added constructor for production - logs false for default environment\n  constructor() {\n    console.log(environment.production);\n  }\n  title = 'Movie-Robots';\n}\n","<div>\n  <nav class=\"navbar navbar-expand navbar-custom\">\n    <div class = \"container\">\n\n    <a href=\"#\" class=\"navbar-brand\">Movie-Robots</a>\n\n    <div class=\"navbar-nav mr-auto\">\n      <img class=\"image-thumb\" src=\"https://i.ibb.co/GT97v8Z/image1.png\" />\n    </div>\n\n    <div class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item\">\n        <a routerLink=\"movies\" class=\"nav-link\">Movies</a>\n      </li>\n    </div>\n  \n    <div class=\"navbar-nav mr-auto\">\n      <img class=\"image-thumb\" src=\"https://i.ibb.co/fdzNpNK/image6.png\" />\n    </div>\n\n    <div class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item\">\n        <a routerLink=\"movies/add\" class=\"nav-link\">Add Movie</a>\n      </li>\n    </div>\n\n    <div class=\"navbar-nav mr-auto\">\n      <img class=\"image-thumb\" src=\"https://i.ibb.co/cFT9yb1/image5.png\" />\n    </div>\n\n    <div class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item\">\n        <a routerLink=\"actors\" class=\"nav-link\">Robots</a>\n      </li>\n    </div>\n\n    <div class=\"navbar-nav mr-auto\">\n      <img class=\"image-thumb\" src=\"https://i.ibb.co/MP3qgw0/image7.png\" />\n    </div>\n\n    <div class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item\">\n        <a routerLink=\"actors/add\" class=\"nav-link\">Add Robot</a>\n      </li>\n    </div>\n\n    <div class=\"navbar-profile\">\n      <app-user-profile></app-user-profile>\n    </div>\n\n    <div class=\"navbar-btn\">     \n      <app-auth-button></app-auth-button>\n    </div>\n\n  </div>\n  </nav>\n  \n\n  <div class=\"container mt-3\">\n    <router-outlet></router-outlet>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Movie } from 'src/app/models/movie.model';\nimport { MovieService } from 'src/app/services/movie.service';\nimport { AuthService } from '@auth0/auth0-angular';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-movies-list',\n  templateUrl: './movies-list.component.html',\n  styleUrls: ['./movies-list.component.css']\n})\nexport class MoviesListComponent implements OnInit {\n  movies?: Movie[];\n  currentMovie?: Movie;\n  currentMovieImg: string;\n  currentIndex = -1;\n  title = '';\n  isAssistant: boolean = false; //added as a property of component\n  isDirector: boolean = false; //added as a property of component\n\n  constructor(\n    private movieService: MovieService,\n    public auth0: AuthService) { }\n\n  async ngOnInit() {\n    this.retrieveMovies();\n    this.checkRoles() ; //function whenever page loads\n  }\n\n  retrieveMovies(): void {\n    this.movieService.getAllMovies()\n      .subscribe(\n        data => {\n          this.movies = data;\n          console.log(data);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  get defaultPic(): string {\n    return (this.currentMovie && this.currentMovieImg)?\n      this.currentMovieImg:\"https://i.ibb.co/6v84Gpq/no-image.png\";\n  }\n\n  setDefaultPic() {\n    this.currentMovieImg = null;\n  }\n\n  refreshList(): void {\n    this.retrieveMovies();\n    this.currentMovie = undefined;\n    this.currentIndex = -1;\n  }\n\n  setActiveMovie(movie: Movie, index: number): void {\n    this.currentMovieImg = null;\n    \n    setTimeout(()=>{\n      this.currentMovieImg = (movie)? movie.movie_img: null;\n      this.currentMovie = movie;\n      this.currentIndex = index;\n    }, 100);\n  }\n\n  searchTitle(): void {\n    this.currentMovie = undefined;\n    this.currentIndex = -1;\n\n    this.movieService.findMovieByTitle(this.title)\n      .subscribe(\n        data => {\n          this.movies = data;\n          console.log(data);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  //method called after component loads to check the roles\n  checkRoles() {\n    console.log('checkRoles()');\n    this.auth0.isAuthenticated$  //observable which returns the authenticated status\n      .subscribe(\n        isAuthenticated=>{\n          if(isAuthenticated) {  //if authenticated then gets the user\n            console.log('checkRoles(): authenticated getting user');\n            this.auth0.user$  //observable which returns the user\n              .subscribe(\n                user=>{  // returns the user\n                  console.log('checkRoles(): user', user);\n                  const roles: Array<string> = user[ environment.userRole ]; //fetch roles from user\n                  console.log(\"checkRoles(): user roles: \", roles);\n                  this.isAssistant = roles.some(elem => elem==\"assistant\")\n                  this.isDirector = roles.some(elem => elem==\"director\")\n                },\n                err=>{\n                  console.log('checkRoles(): error getting user', err);\n                }\n              );\n          } else {\n            console.log('checkRoles(): not authenticated ');\n          }\n        },\n        err=>{\n          console.log('checkRoles(): error getting authentication status', err);\n        }\n      );\n  }\n\n}\n","<div class=\"list row\">\n    <div class=\"col-md-8\">\n      <div class=\"input-group mb-3\">\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          placeholder=\"Search by title\"\n          [(ngModel)]=\"title\"\n        />\n        <div class=\"input-group-append\">\n          <button\n            class=\"btn btn-outline-secondary\"\n            type=\"button\"\n            (click)=\"searchTitle()\"\n          >\n            Search\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col-md-6\">\n      <p></p>\n      <h4>Movies List</h4>\n\n      <ul class=\"list-group\">\n        <li\n          class=\"list-group-item\"\n          *ngFor=\"let movie of movies; let i = index\"\n          [class.active]=\"i == currentIndex\"\n          (click)=\"setActiveMovie(movie, i)\"\n        >\n          {{ movie.title }}\n        </li>\n      </ul>\n    </div>\n\n    <div class=\"col-md-6\">\n      <div *ngIf=\"currentMovie\">\n        <p></p>\n        <h4>Movie</h4>\n\n        <div>\n          <img class=\"image-thumb\" src=\"{{ defaultPic }}\" \n          (error)=\"setDefaultPic()\" />\n        </div>\n        <br />\n        <div>\n          <label><strong>Title:    </strong>\n            {{ currentMovie.title }}</label> \n        </div>\n\n        <div>\n          <label><strong>Release Date:   </strong>\n            {{ currentMovie.release_date }} </label>\n        </div>\n\n        <div>\n          <label><strong>Status:    </strong>\n            {{ currentMovie.movie_publish ? \"Published\" : \"Pending\" }}</label>      \n        </div>\n        <p></p>\n        <a class=\"btn btn-primary me-2\" *ngIf=\"isDirector || isAssistant\" routerLink=\"/movies/{{ currentMovie.id }}\">\n          Edit\n        </a>\n      </div>\n\n      <div *ngIf=\"!currentMovie\">\n        <br />\n        <p>Please click on a Movie...</p>\n      </div>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { environment } from '../environments/environment';\n\n//source: https://auth0.com/docs/quickstart/spa/angular/02-calling-an-api\n\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { MoviesListComponent } from './components/movies-list/movies-list.component';\nimport { MovieDetailsComponent } from './components/movie-details/movie-details.component';\nimport { AddMovieComponent } from './components/add-movie/add-movie.component';\n\nimport { ActorsListComponent } from './components/actors-list/actors-list.component';\nimport { ActorDetailsComponent } from './components/actor-details/actor-details.component';\nimport { AddActorComponent } from './components/add-actor/add-actor.component';\n\n// import the module from the SDK and ApiService\nimport { AuthModule } from '@auth0/auth0-angular';\nimport { AuthButtonComponent } from './components/auth/auth.component';\nimport{ UserProfileComponent }  from './components/profile/profile.component';\n// import headers from tokens\nimport{ TokenInterceptor } from './token.interceptor';\nimport { AuthService } from './services/auth.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AddMovieComponent,\n    MovieDetailsComponent,\n    MoviesListComponent,\n    AddActorComponent,\n    ActorDetailsComponent,\n    ActorsListComponent,\n    AuthButtonComponent,\n    UserProfileComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    // import the module into the application, with environment configuration\n    AuthModule.forRoot({\n      domain: environment.auth.domain,\n      clientId: environment.auth.clientID,\n      audience: environment.auth.audience,\n      scope: 'openid',\n      httpInterceptor: {\n        allowedList: [\n          {\n            uri: environment.auth.uri,\n            tokenOptions: {\n              audience: environment.auth.audience,\n              scope: environment.auth.scope,\n            }\n          }\n        ]\n      }\n    }),\n  ],\n  providers: [\n    AuthService,\n    {\n      //get headers and access token\n      provide: HTTP_INTERCEPTORS, \n      useClass: TokenInterceptor, \n      multi: true \n    }\n  ],\n\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n\n  domain:string=\"\";\n  clientID:string=\"\";\n  audience:string=\"\";\n  redirect:string=\"\";\n  scope:string=\"\";\n  uri:string=\"\";\n\n  constructor() {\n    this.domain = environment.auth.domain;\n    this.clientID = environment.auth.clientID;\n    this.audience = environment.auth.audience;\n    this.redirect = environment.auth.redirect;\n    this.scope = environment.auth.scope;\n    this.uri = environment.auth.uri;\n }\n}","import { Component, OnInit } from '@angular/core';\nimport { ActorService } from 'src/app/services/actor.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Actor } from 'src/app/models/actor.model';\nimport { AuthService } from '@auth0/auth0-angular';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-actor-details',\n  templateUrl: './actor-details.component.html',\n  styleUrls: ['./actor-details.component.css']\n})\nexport class ActorDetailsComponent implements OnInit {\n  currentActor: Actor = {\n    first_name: '',\n    last_name: '',\n    birth_date: '',\n    gender: '',\n    actor_img: '',\n    actor_publish: false\n  };\n  message = '';\n  isAssistant: boolean = false; //added as a property of component\n  isDirector: boolean = false; //added as a property of component\n\n  constructor(\n    private actorService: ActorService,\n    private route: ActivatedRoute,\n    private router: Router,\n    public auth0: AuthService) { }\n\n  async ngOnInit() {\n    this.message = '';\n    this.getActor(this.route.snapshot.params.id);\n    this.checkRoles() ; //function whenever page loads\n  }\n\n  getActor(id: string): void {\n    this.actorService.getActor(id)\n      .subscribe(\n        data => {\n          if(data && data.success === true) {\n            this.currentActor = data.actor;\n            console.log(`getActor(${id}): returned actor`, this.currentActor);\n          } else {\n            console.error(`getActor(${id}) failed`, data);\n          }\n        },\n        error => {\n          console.error(`getActor(${id})`, error);\n        });\n  }\n\n  publishActor(): void {\n    this.actorService.publishActor(this.currentActor.id)\n      .subscribe(\n        response => {\n          this.getActor(this.route.snapshot.params.id);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  unpublishActor(): void {\n    this.actorService.unpublishActor(this.currentActor.id)\n      .subscribe(\n        response => {\n          this.getActor(this.route.snapshot.params.id);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  updateActor(): void {\n    this.actorService.updateActor(this.currentActor.id, this.currentActor)\n      .subscribe(\n        response => {\n          console.log(response);\n          this.message = (response.success)?\"Successful Robot update!\":\"Unsuccessful Robot update\";\n        },\n        error => {\n          console.log(error);\n          this.message = \"Unsuccessful Robot update\";\n        });\n  }\n\n  deleteActor(): void {\n    this.actorService.deleteActor(this.currentActor.id)\n      .subscribe(\n        response => {\n          console.log(response);\n          this.router.navigate(['/actors']);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  //method called after component loads to check the roles\n  checkRoles() {\n    console.log('checkRoles()');\n    this.auth0.isAuthenticated$  //observable which returns the authenticated status\n      .subscribe(\n        isAuthenticated=>{\n          if(isAuthenticated) {  //if authenticated then gets the user\n            console.log('checkRoles(): authenticated getting user');\n            this.auth0.user$  //observable which returns the user\n              .subscribe(\n                user=>{  // returns the user\n                  console.log('checkRoles(): user', user);\n                  const roles: Array<string> = user[ environment.userRole ]; //fetch roles from user\n                  console.log(\"checkRoles(): user roles: \", roles);\n                  this.isAssistant = roles.some(elem => elem==\"assistant\")\n                  this.isDirector = roles.some(elem => elem==\"director\")\n                },\n                err=>{\n                  console.log('checkRoles(): error getting user', err);\n                }\n              );\n          } else {\n            console.log('checkRoles(): not authenticated ');\n          }\n        },\n        err=>{\n          console.log('checkRoles(): error getting authentication status', err);\n        }\n      );\n  }\n}\n","<form #form=\"ngForm\" novalidate>\n  <div class=\"submit-form\">\n    <div *ngIf=\"currentActor.id\" class=\"edit-form\">\n      <h4>Robot</h4> <p>{{ message }}</p>\n\n      <form>\n        <div class=\"form-group\">\n          <label for=\"id\">Id</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            [readonly]=\"!editable\"\n            id=\"id\"\n            [(ngModel)]=\"currentActor.id\"\n            name=\"id\"\n          />\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"first_name\">First Name</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            #first_name=\"ngModel\"\n            required\n            minlength=\"2\"\n            id=\"first_name\"\n            [(ngModel)]=\"currentActor.first_name\"\n            name=\"first_name\"\n          />\n        </div>\n\n        <div *ngIf=\"first_name.invalid && (first_name.dirty || first_name.touched)\"\n          class=\"alert alert-danger\">\n          <div *ngIf=\"first_name.errors.required\">\n            First Name is required.\n          </div>\n          <div *ngIf=\"first_name.errors.minlength\">\n            First Name must be at least 2 characters.\n          </div>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"last_name\">Last Name</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            #last_name=\"ngModel\"\n            required\n            minlength=\"2\"\n            id=\"last_name\"\n            [(ngModel)]=\"currentActor.last_name\"\n            name=\"last_name\"\n          />\n        </div>\n\n        <div *ngIf=\"last_name.invalid && (last_name.dirty || last_name.touched)\"\n          class=\"alert alert-danger\">\n          <div *ngIf=\"last_name.errors.required\">\n            Last Name is required.\n          </div>\n          <div *ngIf=\"last_name.errors.minlength\">\n            Last Name must be at least 2 characters.\n          </div>\n        </div>\n\n        <div class=\"form-group\">\n            <label for=\"birth_date\">Birth Date</label>\n            <input\n              type=\"text\"\n              onfocus=\"(this.type='date')\"\n              class=\"form-control\"\n              name=\"birth_date\"\n              #birth_date=\"ngModel\"\n              required\n              id=\"birth_date\"\n              [(ngModel)]=\"currentActor.birth_date\"\n            />\n        </div>\n\n        <div class=\"form-group\">\n            <label for=\"gender\">Gender</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              #gender=\"ngModel\"\n              required\n              minlength=\"2\"\n              id=\"gender\"\n              [(ngModel)]=\"currentActor.gender\"\n              name=\"gender\"\n            />\n        </div> \n        \n        <div *ngIf=\"gender.invalid && (gender.dirty || gender.touched)\"\n          class=\"alert alert-danger\">\n          <div *ngIf=\"gender.errors.required\">\n            Gender is required.\n          </div>\n          <div *ngIf=\"gender.errors.minlength\">\n            Gender must be at least 2 characters.\n          </div>\n        </div>\n\n        <div class=\"form-group\">\n            <label for=\"actor_img\">Robot Image</label>\n            <input\n              id=\"actor_img\"\n              type=\"text\"\n              class=\"form-control\"\n              name=\"actor_img\"\n              #actor_img=\"ngModel\"\n              required\n              [(ngModel)]=\"currentActor.actor_img\"\n              [ngModelOptions]=\"{ updateOn: 'blur' }\" \n              pattern=\"(http(s?):)([/|.|\\w|\\s|-])*\\.(?:jpg|jpeg|gif|png|svg)\"\n            />\n        </div> \n\n        <div *ngIf=\"actor_img.invalid && (actor_img.dirty || actor_img.touched)\"\n          class=\"alert alert-danger\">\n          <div *ngIf=\"actor_img.errors.required\">\n            URL is required.\n          </div>\n          <div *ngIf=\"actor_img.errors.pattern\">\n            Please enter valid url.\n          </div>\n        </div>\n  \n        <div class=\"form-group\">\n          <label><strong>Status:</strong></label>\n          {{ currentActor.actor_publish ? \"Published\" : \"Pending\" }}\n        </div>\n      </form>\n      \n      <br />\n      <button\n        class=\"btn btn-primary me-2\"\n        *ngIf=\"currentActor.actor_publish && isAssistant\"\n        (click)=\"unpublishActor()\"\n      >\n        UnPublish\n      </button>\n\n      <button\n        class=\"btn btn-primary me-2\"\n        *ngIf=\"!currentActor.actor_publish && isAssistant\"\n        (click)=\"publishActor()\"\n      >\n        Publish\n      </button>\n  \n      <button class=\"btn btn-danger me-2\" *ngIf=\"isDirector\" (click)=\"deleteActor()\">\n        Delete\n      </button>\n  \n      <button\n        type=\"submit\"\n        class=\"btn btn-success me-2\" *ngIf=\"isAssistant\" [disabled]=\"form.invalid\" (click)=\"updateActor()\" >\n        Update\n      </button>\n    </div>\n  \n    <div *ngIf=\"!currentActor.id\">\n      <br />\n      <p>Cannot access this Robot...</p>\n    </div>\n  </div>\n</form>\n","//source: https://www.sitepoint.com/authentication-angular-auth0/\nimport { Injectable } from '@angular/core';\nimport * as auth0 from 'auth0-js';\nimport { environment } from './../../environments/environment';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class AuthService {\n  // Create Auth0 web auth instance\n  auth0 = new auth0.WebAuth({\n    clientID: environment.auth.clientID,\n    domain: environment.auth.domain,\n    responseType: 'token',\n    redirectUri: environment.auth.redirect,\n    audience: environment.auth.audience,\n    scope: environment.auth.scope\n  });\n  // Store authentication data\n  userProfile: any;\n  accessToken: string;\n  authenticated: boolean;\n\n  constructor(private router: Router) {\n    // Check session to restore login if not expired\n    this.getAccessToken();\n  }\n\n  login() {\n    // Auth0 authorize request\n    this.auth0.authorize();\n  }\n\n  handleLoginCallback() {\n    // When Auth0 hash parsed, get profile\n    this.auth0.parseHash((err, authResult) => {\n      if (authResult && authResult.accessToken) {\n        window.location.hash = '';\n        this.getUserInfo(authResult);\n      } else if (err) {\n        console.error(`Error: ${err.error}`);\n      }\n      this.router.navigate(['/']);\n    });\n  }\n\n  getAccessToken() {\n    this.auth0.checkSession({}, (err, authResult) => {\n      if (authResult && authResult.accessToken) {\n        this.getUserInfo(authResult);\n      } else if (err) {\n        console.log(err);\n        this.logout();\n        this.authenticated = false;\n      }\n    });\n  }\n\n  getUserInfo(authResult) {\n    // Use access token to retrieve user's profile and set session\n    this.auth0.client.userInfo(authResult.accessToken, (err, profile) => {\n      if (profile) {\n        this._setSession(authResult, profile);\n      }\n    });\n  }\n\n  private _setSession(authResult, profile) {\n    const expTime = authResult.expiresIn * 1000 + Date.now();\n    // Save authentication data and update login status subject\n    localStorage.setItem('expires_at', JSON.stringify(expTime));\n    this.accessToken = authResult.accessToken;\n    this.userProfile = profile;\n    this.authenticated = true;\n  }\n\n  logout() {\n    // Remove auth data and update login status\n    localStorage.removeItem('expires_at');\n    this.userProfile = undefined;\n    this.accessToken = undefined;\n    this.authenticated = false;\n  }\n\n  get isLoggedIn(): boolean {\n    // check if current date is before token\n    // expiration and user is signed in locally\n    const expiresAt = JSON.parse(localStorage.getItem('expires_at'));\n    return Date.now() < expiresAt && this.authenticated;\n  }\n\n}","import { Component, OnInit } from '@angular/core';\nimport { Movie } from 'src/app/models/movie.model';\nimport { MovieService } from 'src/app/services/movie.service';\nimport { AuthService } from '@auth0/auth0-angular';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-add-movie',\n  templateUrl: './add-movie.component.html',\n  styleUrls: ['./add-movie.component.css']\n})\n\nexport class AddMovieComponent implements OnInit {\n  movie: Movie = {\n    title: '',\n    release_date: '',\n    movie_img: '',\n    movie_publish: false\n  };\n  submitted = false;\n  isDirector: boolean = false; //isDirector is a property of component\n\n  constructor(\n    private movieService: MovieService,\n    public auth0: AuthService) { }\n\n  async ngOnInit() {\n    this.checkRoles() ; //function whenever page loads\n  }\n\n  saveMovie(form: any): void {\n    const data = {\n      title: this.movie.title,\n      release_date: this.movie.release_date,\n      movie_img: this.movie.movie_img\n    };\n\n    this.movieService.addMovie(data)\n      .subscribe(\n        response => {\n          console.log(response);\n          this.submitted = true;\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  newMovie(): void {\n    this.submitted = false;\n    this.movie = {\n      title: '',\n      release_date: '',\n      movie_img: '',\n      movie_publish: false\n    };\n  }\n\n  //method called after component loads to check the roles\n  checkRoles() {\n    console.log('checkRoles()');\n    this.auth0.isAuthenticated$  //observable which returns the authenticated status\n      .subscribe(\n        isAuthenticated=>{\n          if(isAuthenticated) {  //if authenticated then gets the user\n            console.log('checkRoles(): authenticated getting user');\n            this.auth0.user$  //observable which returns the user\n              .subscribe(\n                user=>{  // returns the user\n                  console.log('checkRoles(): user', user);\n                  const roles: Array<string> = user[ environment.userRole ]; //fetch roles from user\n                  console.log(\"checkRoles(): user roles: \", roles);\n                  this.isDirector = roles.some(elem => elem==\"director\")\n                },\n                err=>{\n                  console.log('checkRoles(): error getting user', err);\n                }\n              );\n          } else {\n            console.log('checkRoles(): not authenticated ');\n          }\n        },\n        err=>{\n          console.log('checkRoles(): error getting authentication status', err);\n        }\n      );\n  }\n\n}\n","<form #form=\"ngForm\" (ngSubmit)=\"saveMovie(form)\" novalidate>\n    <div class=\"submit-form\">\n      <div *ngIf=\"!submitted\">\n        <br />\n        <h4>Add Movie</h4>\n        <p></p>\n        \n        <div class=\"form-group\">\n          <label for=\"title\">Title</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            #title=\"ngModel\"\n            required\n            minlength=\"2\"\n            [(ngModel)]=\"movie.title\"\n            name=\"title\"\n          />\n        </div>\n     \n        <div *ngIf=\"title.invalid && (title.dirty || title.touched)\"\n          class=\"alert alert-danger\">\n          <div *ngIf=\"title.errors.required\">\n            Title is required.\n          </div>\n          <div *ngIf=\"title.errors.minlength\">\n            Title must be 2 characters long.\n          </div>\n        </div>\n\n        <div class=\"form-group\">\n            <label for=\"release_date\">Release Date</label>\n            <input\n              type=\"text\"\n              onfocus=\"(this.type='date')\"\n              class=\"form-control\"\n              name=\"release_date\"\n              placeholder=\"mm/dd/yyyy\"\n              #release_date=\"ngModel\"\n              required\n              [(ngModel)]=\"movie.release_date\"\n            />\n          </div>\n\n        <div class=\"form-group\">\n            <label for=\"movie_img\">Movie Image</label>\n            <input\n              id=\"movie_img\"\n              type=\"text\"\n              class=\"form-control\"\n              name=\"movie_img\"\n              placeholder=\"https://starwars.png\"\n              #movie_img=\"ngModel\"\n              required\n              [(ngModel)]=\"movie.movie_img\"\n              [ngModelOptions]=\"{ updateOn: 'blur' }\" \n              pattern=\"(http(s?):)([/|.|\\w|\\s|-])*\\.(?:jpg|jpeg|gif|png|svg)\"\n            />\n        </div>\n\n        <div *ngIf=\"movie_img.invalid && (movie_img.dirty || movie_img.touched)\"\n          class=\"alert alert-danger\">\n          <div *ngIf=\"movie_img.errors.required\">\n            URL is required.\n          </div>\n          <div *ngIf=\"movie_img.errors.pattern\">\n            Please enter valid url.\n          </div>\n        </div>\n  \n        <p></p>\n        <button class=\"btn btn-success\"  *ngIf=\"isDirector\" [disabled]=\"form.invalid\">Submit</button>\n      </div>\n  \n      <div *ngIf=\"submitted\">\n        <h4>Movie was submitted successfully!</h4>\n        <button class=\"btn btn-success\" (click)=\"newMovie()\">Add</button>\n      </div>\n    </div>\n</form>","import { Component, Inject } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\n// Import the AuthService type from the SDK\r\nimport { AuthService } from '@auth0/auth0-angular';\r\n\r\n@Component({\r\n  selector: 'app-auth-button',\r\n  template: `\r\n    <ng-container *ngIf=\"auth.isAuthenticated$ | async; else loggedOut\">\r\n      <button (click)=\"auth.logout({ returnTo: document.location.origin })\">\r\n        Log out\r\n      </button>\r\n    </ng-container>\r\n\r\n    <ng-template #loggedOut>\r\n      <button (click)=\"auth.loginWithRedirect()\">Authorized Login</button>\r\n    </ng-template>\r\n  `,\r\n  styles: [],\r\n})\r\nexport class AuthButtonComponent {\r\n  constructor(@Inject(DOCUMENT) public document: Document, public auth: AuthService) {}\r\n}","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { MoviesListComponent } from './components/movies-list/movies-list.component';\nimport { MovieDetailsComponent } from './components/movie-details/movie-details.component';\nimport { AddMovieComponent } from './components/add-movie/add-movie.component';\n\nimport { ActorsListComponent } from './components/actors-list/actors-list.component';\nimport { ActorDetailsComponent } from './components/actor-details/actor-details.component';\nimport { AddActorComponent } from './components/add-actor/add-actor.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'movies', pathMatch: 'full' },\n  { path: 'movies', component: MoviesListComponent },\n  { path: 'movies/add', component: AddMovieComponent },\n  { path: 'movies/:id', component: MovieDetailsComponent },\n  { path: 'actors', component: ActorsListComponent },\n  { path: 'actors/add', component: AddActorComponent },\n  { path: 'actors/:id', component: ActorDetailsComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}